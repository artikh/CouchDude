// <autogenerated>
// This code was generated by a tool. Any changes made manually will be lost
// the next time this code is regenerated.
// </autogenerated>

using System;
using System.Runtime.Serialization;

namespace CouchDude.Core
{
	/// <summary> Query exception.</summary>
	[Serializable]
	public partial class QueryException: CouchDudeException
	{
		/// <summary>Initializes a new instance of the 
		/// <see cref="QueryException" /> class.</summary>
		/// <param name="info">The <see cref="SerializationInfo"/> that holds the 
		/// serialized object data about the exception being thrown.</param>
		/// <param name="context">The <see cref="StreamingContext"/> that contains 
		/// contextual information about the source or destination.</param>
		/// <exception cref="ArgumentNullException">The <paramref name="info"/> 
		/// parameter is null. </exception>
		/// <exception cref="SerializationException">The class name is null or 
		/// <see cref="Exception.HResult"/> is zero (0). </exception>
		public QueryException(SerializationInfo info, StreamingContext context)
			: base(info, context) { }

		/// <summary>Initializes a new instance of the <see cref="QueryException" /> class.</summary>
		/// <param name="message">The message.</param>
		public QueryException(string message): base(message) { }

		/// <summary>Initializes a new instance of the <see cref="QueryException" /> class.</summary>
		/// <param name="messageTemplate">The message template.</param>
		/// <param name="messageParams">The message params.</param>
		[JetBrains.Annotations.StringFormatMethod("messageTemplate")]
		public QueryException(string messageTemplate, params object[] messageParams)
			: base(String.Format(messageTemplate, messageParams)) { }

		/// <summary>Initializes a new instance of the 
		/// <see cref="QueryException" /> class.</summary>
		/// <param name="innerException">The inner exception.</param>
		/// <param name="messageTemplate">The message template.</param>
		/// <param name="messageParams">The message params.</param>
		[JetBrains.Annotations.StringFormatMethod("messageTemplate")]
		public QueryException(
			Exception innerException,
			string messageTemplate,
			params object[] messageParams)
			: base(AddInnerExceptionMessage(String.Format(messageTemplate, messageParams), innerException), innerException) { }

		/// <summary>Initializes a new instance of the 
		/// <see cref="QueryException" /> class.</summary>
		/// <param name="innerException">The inner exception.</param>
		/// <param name="message">The message.</param>
		[JetBrains.Annotations.StringFormatMethod("message")]
		public QueryException(Exception innerException, string message)
			: base(AddInnerExceptionMessage(message, innerException), innerException) { }
			
		private static string AddInnerExceptionMessage(string message, Exception innerException)
		{
			return string.Concat(message, ": ", innerException.Message);
		}
	}
}


